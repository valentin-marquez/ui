---
import { cn } from '@/lib/utils';
import Button from '@/components/ui/button.astro';
import type { SidebarSection } from '@/lib/constants';

interface Props {
  sections: SidebarSection[];
  class?: string;
}

const { sections, class: className } = Astro.props;

const isActive = (href: string) => Astro.url.pathname === href;
---

<nav
  data-sidebar
  class={cn(
    'fixed z-50 h-[calc(100vh-4rem)] w-[250px] overflow-y-auto overflow-x-hidden pb-10',
    'bg-gradient-to-b from-background to-background/80 backdrop-blur-sm',
    'flex flex-col gap-1',
    'border-r border-border/50',
    'scrollbar-thin scrollbar-track-transparent scrollbar-thumb-border/30 scrollbar-thumb-rounded-full',
    'transition-transform duration-300 ease-in-out',
    'md:translate-x-0 -translate-x-full',
    className
  )}
>
  {
    sections.map((section) => (
      <section class="px-3 py-2 group/section">
        <div class="mb-2 flex w-full items-center gap-3 px-2 py-2 text-start text-sm font-semibold text-foreground/80 rounded-lg bg-gradient-to-r from-transparent via-primary/5 to-transparent">
          {section.icon && (
            <span class="text-lg text-primary/60 group-hover/section:text-primary/80 transition-colors">
              {section.icon}
            </span>
          )}
          <span class="tracking-wider uppercase text-xs font-bold letter-spacing-1">
            {section.title}
          </span>
        </div>

        <div class="space-y-1">
          {section.items.map((item) => {
            const active = isActive(item.href);
            return (
              <div class="relative flex max-w-full flex-col">
                {active && (
                  <div class="absolute left-0 top-1/2 -translate-y-1/2 w-1 h-6 bg-primary rounded-r-full" />
                )}

                <Button
                  href={active ? undefined : item.href}
                  variant="ghost"
                  size="md"
                  class={cn(
                    'w-full justify-start gap-3 transition-all duration-300',
                    'hover:bg-accent/20 hover:translate-x-2 hover:shadow-sm',
                    'group/item relative overflow-hidden',
                    active && '!bg-accent/30 !translate-x-0 font-medium'
                  )}
                  ...
                  props
                  restantes
                >
                  {item.icon && (
                    <span
                      class={cn(
                        'text-lg p-1.5 rounded-md ',
                        'border border-border/20 shadow-sm',
                        'transform transition-all duration-300 ease-out',
                        'backdrop-blur-sm',
                        active
                          ? 'text-primary  border-primary/30 shadow-primary/20 scale-105'
                          : 'text-foreground/50 group-hover/item:text-foreground/80 group-hover/item:scale-110 '
                      )}
                    >
                      {item.icon}
                    </span>
                  )}

                  <div class="flex-1 min-w-0">
                    <div class="flex items-center justify-between">
                      <span class="truncate text-sm">{item.title}</span>
                      {item.badge && (
                        <span class="px-2 py-0.5 text-xs rounded-full bg-primary/10 text-primary/80">
                          {item.badge}
                        </span>
                      )}
                    </div>
                    {item.description && (
                      <p class="text-xs text-muted-foreground/60 truncate">
                        {item.description}
                      </p>
                    )}
                  </div>

                  {item.isNew && (
                    <span class="absolute right-2 top-1/2 -translate-y-1/2">
                      <span class="relative flex h-2 w-2">
                        <span class="animate-ping absolute inline-flex h-full w-full rounded-full bg-primary/80 opacity-75" />
                        <span class="relative inline-flex rounded-full h-2 w-2 bg-primary" />
                      </span>
                    </span>
                  )}
                </Button>
              </div>
            );
          })}
        </div>
      </section>
    ))
  }

  <div
    class="absolute inset-0 -z-10 bg-[radial-gradient(ellipse_at_top_left,_var(--tw-gradient-stops))] from-primary/5 via-background/0 to-background/80"
  >
  </div>
  <div
    class="absolute top-0 left-64 w-px h-full bg-gradient-to-b from-transparent via-border/30 to-transparent"
  >
  </div>
</nav>
