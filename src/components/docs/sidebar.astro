---
import { cn } from "@/lib/utils";
import Button from "@/components/primitives/button.astro";
import type { SidebarSection } from "@/lib/constants";

interface Props {
  sections: SidebarSection[];
  class?: string;
}

const { sections, class: className } = Astro.props;

const isActive = (href: string) => Astro.url.pathname === href;
---

<nav
  data-sidebar
  class={cn(
    "fixed z-50 h-[calc(100vh-4rem)] w-[250px] overflow-y-auto overflow-x-hidden pb-10",
    "bg-background backdrop-blur-sm",
    "flex flex-col gap-1",
    "border-r border-border/50",
    "scrollbar-thin scrollbar-track-transparent scrollbar-thumb-border/30 scrollbar-thumb-rounded-full",
    "transition-transform duration-300 ease-in-out",
    "md:translate-x-0 -translate-x-full",
    className,
  )}
>
  {
    sections.map((section) => (
      <section class="px-3 py-2">
        <div class="px-2 py-1.5">
          <span class="text-xs font-medium text-muted-foreground">
            {section.title}
          </span>
        </div>

        <div class="space-y-1">
          {section.items.map((item) => {
            const active = isActive(item.href);
            return (
              <div class="relative flex max-w-full flex-col">
                {active && (
                  <div class="absolute left-0 top-1/2 -translate-y-1/2 w-1 h-6 bg-primary rounded-r-full" />
                )}

                <Button
                  aria-current={active ? "page" : undefined}
                  href={active ? undefined : item.href}
                  variant="ghost"
                  class={cn(
                    "relative rounded-lg flex h-10 items-center p-2",
                    "transition-colors duration-200",
                    "text-muted-foreground hover:text-foreground",
                    "hover:bg-accent/80 active:bg-accent",
                    "aria-[current=page]:bg-muted",
                    "aria-[current=page]:text-foreground",
                    "aria-[current=page]:shadow-inner",
                    "aria-[current=page]:[--shadow-color:hsl(var(--button)/30%)]",
                    active && "font-medium",
                  )}
                >
                  <div class="flex-1 min-w-0">
                    <div class="flex items-center justify-between">
                      <span class="truncate text-sm">{item.title}</span>
                      {item.badge && (
                        <span class="px-2 py-0.5 text-xs rounded-full bg-primary/10 text-primary/80">
                          {item.badge}
                        </span>
                      )}
                    </div>
                  </div>

                  {item.isNew && (
                    <span class="absolute right-2 top-1/2 -translate-y-1/2">
                      <span class="relative flex h-2 w-2">
                        <span class="animate-ping absolute inline-flex h-full w-full rounded-full bg-primary/80 opacity-75" />
                        <span class="relative inline-flex rounded-full h-2 w-2 bg-primary" />
                      </span>
                    </span>
                  )}
                </Button>
              </div>
            );
          })}
        </div>
      </section>
    ))
  }

  <div
    class="absolute inset-0 -z-10 bg-[radial-gradient(ellipse_at_top_left,_var(--tw-gradient-stops))] from-primary/5 via-background/0 to-background/80"
  >
  </div>
  <div
    class="absolute top-0 left-64 w-px h-full bg-gradient-to-b from-transparent via-border/30 to-transparent"
  >
  </div>
</nav>
