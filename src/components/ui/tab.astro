---
import type { HTMLAttributes } from 'astro/types';
import { cn } from '@/lib/utils';

export interface TabProps extends HTMLAttributes<'div'> {
  value: string;
  title: string;
  disabled?: boolean;
  icon?: string;
  badge?: string | number;
  class?: string;
}

const {
  value,
  title,
  disabled = false,
  icon,
  badge,
  class: className,
  ...props
} = Astro.props as TabProps;

const id = `tab-${value}`;
const panelId = `panel-${value}`;
---

<button
  type="button"
  role="tab"
  id={id}
  aria-controls={panelId}
  aria-selected="false"
  data-value={value}
  data-state="inactive"
  disabled={disabled}
  class={cn(
    'relative inline-flex items-center justify-center gap-2',
    'rounded-md px-3 py-1.5 text-sm font-medium',
    'transition-all duration-200',
    'focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2',
    'disabled:pointer-events-none disabled:opacity-50',
    'data-[state=active]:text-primary data-[state=active]:font-semibold',
    'data-[state=inactive]:text-muted-foreground hover:text-foreground',
    'group/tab',
    className
  )}
  {...props}
>
  {
    icon && (
      <span
        class={cn(
          'text-lg transition-colors duration-200',
          'data-[state=inactive]:text-muted-foreground/70',
          'data-[state=active]:text-primary group-hover/tab:text-foreground'
        )}
        aria-hidden="true"
      >
        {icon}
      </span>
    )
  }
  <span>{title}</span>
  {
    badge && (
      <span
        class={cn(
          'inline-flex items-center px-1.5 py-0.5 rounded-full text-xs',
          'transition-colors duration-200',
          'data-[state=active]:bg-primary/10 data-[state=active]:text-primary',
          'data-[state=inactive]:bg-muted data-[state=inactive]:text-muted-foreground'
        )}
      >
        {badge}
      </span>
    )
  }
</button>

<div
  role="tabpanel"
  id={panelId}
  aria-labelledby={id}
  hidden
  class={cn(
    'outline-none focus-visible:ring-2 focus-visible:ring-ring',
    'motion-safe:animate-fadeIn',
    className
  )}
>
  <slot />
</div>
