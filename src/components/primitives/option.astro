---
import type { HTMLAttributes } from "astro/types";
import { cn } from "@/lib/utils";

interface Props extends HTMLAttributes<"div"> {
  value: string;
  selected?: boolean;
}

const { value, selected = false, class: className, ...attrs } = Astro.props;
---

<custom-option
  value={value}
  data-selected={selected.toString()}
  aria-selected={selected.toString()}
  class={cn(
    "block w-full px-4 py-2 text-sm cursor-pointer transition-colors",
    "hover:bg-accent hover:text-accent-foreground",
    "focus:bg-accent focus:text-accent-foreground focus:outline-none",
    "data-[selected=true]:bg-primary data-[selected=true]:text-primary-foreground",
    className,
  )}
  {...attrs}
>
  <slot />
</custom-option>

<script>
  class CustomOption extends HTMLElement {
    constructor() {
      super();
    }

    connectedCallback(): void {
      this.setAttribute("role", "option");
      this.setAttribute("tabindex", "0");

      // Forward keyboard events
      this.addEventListener("keydown", (e: KeyboardEvent) => {
        if (e.key === "Enter" || e.key === " ") {
          e.preventDefault();
          this.click();
        }
      });
    }
  }

  // Only define the custom element if it hasn't been defined yet
  if (!customElements.get("custom-option")) {
    customElements.define("custom-option", CustomOption);
  }
</script>
